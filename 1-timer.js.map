{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst datePicker = document.querySelector(\"#datetime-picker\");\n\nlet userSelectedDate = null; \n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n      });\n      startBtn.disabled = true; \n    } else {\n      startBtn.disabled = false; \n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nlet timerId = null;\n\nfunction startTimer() {\n  startBtn.disabled = true;\n  datePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay(0, 0, 0, 0);\n      datePicker.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n}\n\nstartBtn.addEventListener(\"click\", startTimer);\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n    document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n    document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n    document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n    document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n  }\n  \n  function addLeadingZero(value) {\n    return String(value).padStart(2, \"0\");\n  }\n  \n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  "],"names":["startBtn","datePicker","userSelectedDate","options","selectedDates","iziToast","flatpickr","timerId","startTimer","timeLeft","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EAE5D,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,GAAoB,IAAI,MAC1BG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDL,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAM,EAAUL,EAAYE,CAAO,EAE7B,IAAII,EAAU,KAEd,SAASC,GAAa,CACpBR,EAAS,SAAW,GACpBC,EAAW,SAAW,GAEtBM,EAAU,YAAY,IAAM,CAE1B,MAAME,EAAWP,EADL,IAAI,KAGhB,GAAIO,GAAY,EAAG,CACjB,cAAcF,CAAO,EACrBG,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BT,EAAW,SAAW,GACtB,MACD,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,CACT,CAEAd,EAAS,iBAAiB,QAASQ,CAAU,EAE7C,SAASE,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACvD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC9E,CAED,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}